package com.intesasanpaolo.bear.tit0.engine;

import com.intesasanpaolo.bear.tit0.engine.*;
import com.intesasanpaolo.bear.tit0.engine.model.json.JsonRowObject;
import com.intesasanpaolo.bear.tit0.engine.model.json.JsonTableObject;
import com.intesasanpaolo.bear.tit0.engine.model.json.structure.ZeroTermStructure;
import com.intesasanpaolo.bear.tit0.engine.model.json.structure.CurveStructure;
import com.intesasanpaolo.bear.tit0.engine.model.drools.IN;
import com.intesasanpaolo.bear.tit0.engine.model.drools.OUT_list;
import com.intesasanpaolo.bear.tit0.engine.model.drools.OUT;
import com.intesasanpaolo.bear.tit0.engine.utils.MathOperator;
import org.apache.commons.math3.analysis.function.Max;
import org.kie.api.builder.*;
import org.kie.api.runtime.*;
import com.google.gson.*;
import java.util.*

import java.util.ArrayList;
import java.util.HashMap;
import com.intesasanpaolo.bear.tit0.engine.utils.*;
import org.slf4j.Logger;

global java.util.HashMap myMap

 




rule"Controllo #7 hst"
    dialect"mvel"
    when
        
        dayCounter: DayCounter()
        log: Logger()


         euribor:  CurveStructure(
            fl_input =="I",
            cod_asset =="EURIBOR")   
      	 spiti3_ASK:  CurveStructure(
            fl_input =="I",
            cod_asset =="SPITI3-EUR",
            cod_type =="ASK") 	
         mn_liq_irs_1m:  CurveStructure(
            fl_input =="O",
            cod_asset =="MN-SPRD-LIQ-IRS-1M")   
         mn_liq_ester:  CurveStructure(
            fl_input =="O",
            cod_asset =="MN-SPRD-LIQ-ESTER")                          
       
    then
    
      String tenor="";
      Double spread = null;
      
      String[] codTenor = mn_liq_irs_1m.getCodTenor() ;
      int len = codTenor.length;
      double[] tassoFissoMedio = new double[len];
      Data dtRif = spiti3_ASK.getAsOfDate();

 	  log.debug("Controllo #7 hst")
 	  
 	  tenor = "1M"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getBucket(tenor)
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
      tassoFissoMedio[0] = spread;
      
      tenor = "2M"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getInterpolatedRate(spiti3_ASK.getDtMaturity(tenor))
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));
      tassoFissoMedio[1] = spread;
      
      tenor = "3M"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getBucket(tenor)
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
      tassoFissoMedio[2] = spread;
      
      tenor = "6M"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getBucket(tenor)
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
      tassoFissoMedio[3] = spread;
      
      tenor = "9M"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getInterpolatedRate(spiti3_ASK.getDtMaturity(tenor))
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
      tassoFissoMedio[4] = spread;
      
      tenor = "1Y"
      spread = spiti3_ASK.getBucket(tenor)-euribor.getBucket(tenor)
      spread = MathOperator.round(spread,2)
      //log.debug(tenor+"\t"+output_sofr.getCod_type()+"\t"+spiti3_USD_ASK.getBucket(tenor)+"\t"+ois_ASK.getBucket(tenor)+"\t"+ois_BID.getBucket(tenor)+"\t"+output_sofr.getBucket(tenor)+"\t"+spread)
      //list.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),spread, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
      tassoFissoMedio[5] = spread;
      
      CurveStructure curvaTassoFissoMedio = new CurveStructure(mn_liq_irs_1m.getBucketDates(), tassoFissoMedio, codTenor, "FIX", dtRif);
    
	  insert(curvaTassoFissoMedio);	         
      
end  




rule"Controllo #7 avg"
    dialect"mvel"
    when
        
        dayCounter: DayCounter()
        log: Logger()


   
       
      		
		 s1m: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("1M")
                                ), 
                                average(spread))
          
             		
		 s2m: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("2M")
                                ), 
                                average(spread))
         
            		
		 s3m: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("3M")
                                ), 
                                average(spread))                                             
                   
             		
		 s6m: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("6M")
                                ), 
                                average(spread))
                                
             		
		 s9m: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("9M")
                                ), 
                                average(spread))            
                                
             		
		 s1y: Number( )
            from accumulate ( CurveStructure(
             					cod_asset =="FIX",
                                spread: getBucket("1Y")
                                ), 
                                average(spread))                                         
               
        
    then
      
      //System.out.println(avg_irs1m.getBucket(mn_liq_irs_1m.getString("COD_TENOR"))+" "+ mn_liq_irs_1m.getString("COD_TENOR"))
      myMap.put("FIX_1M",  s1m)	
      myMap.put("FIX_2M",  s2m)	
      myMap.put("FIX_3M",  s3m)	
      myMap.put("FIX_6M",  s6m)	
      myMap.put("FIX_9M",  s9m)	
      myMap.put("FIX_1Y",  s1y)	         
      
end  



rule"Controllo #7 body"
    dialect"mvel"
    when
        
        dayCounter: DayCounter()
        log: Logger()


         euribor:  CurveStructure(
            fl_input =="I",
            cod_asset =="EURIBOR") 
             
         irs1m_BID:  CurveStructure(
            fl_input =="I",
            cod_asset =="IRS-1M",
            cod_type =="BID")
         irs1m_ASK:  CurveStructure(
            fl_input =="I",
            cod_asset =="IRS-1M",
            cod_type =="ASK")   
         irs3m_BID:  CurveStructure(
            fl_input =="I",
            cod_asset =="IRS-3M",
            cod_type =="BID")
         irs3m_ASK:  CurveStructure(
            fl_input =="I",
            cod_asset =="IRS-3M",
            cod_type =="ASK")   
      
         ois_ester_ASK:  CurveStructure(
            fl_input =="I",
            cod_asset =="OIS-ESTER-SWAP",
            cod_type =="ASK")
         ois_ester_BID:  CurveStructure(
            fl_input =="I",
            cod_asset =="OIS-ESTER-SWAP",
            cod_type =="BID")
         mn_liq_ester:  CurveStructure(
            fl_input =="O",
            cod_asset =="MN-SPRD-LIQ-ESTER")   
         mn_liq_irs_1m:  CurveStructure(
            fl_input =="O",
            cod_asset =="MN-SPRD-LIQ-IRS-1M")   
         tit_mlt:  CurveStructure(
            fl_input =="I",
            cod_asset =="TIT-MLT")        
 	

                  
    then
    
      OUT_list list_ester = new OUT_list();
      OUT_list list_irs = new OUT_list();
      String tenor="";
    
      Double sirs = null;
      Double sester = null;
      Double stv = null;
      Data dtRif = euribor.getAsOfDate();
      Double spread_3M = null;
      Double spread_13M = null;
     
      String[] codTenor = {"1M","2M","3M","6M","9M","1Y","18M"};
      int len = codTenor.length;
      double[] seur = new double[len];
      Data[] dtMat = new Data[len];
       
 	  log.debug("Controllo #7 body");
	  log.debug("TENOR\tTYPE\tSPITI3 ASK\tOIS ASK\tOIS BID\tSOFR\tSPREAD");
      
       //1M
      tenor = codTenor[0];
      seur[0] = myMap.get("FIX_"+tenor) + euribor.getBucket(tenor);
      sirs = myMap.get("FIX_"+tenor);
      dtMat[0] = euribor.getDtMaturity(tenor);
      spread = seur[0]-sester;
      spread = MathOperator.round(spread,2);
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
    
        //2M
      tenor = codTenor[1];
      seur[1] = myMap.get("FIX_"+tenor) + euribor.getInterpolatedRate((irs1m_BID.getDtMaturity(tenor)));
      sirs = myMap.get("FIX_"+tenor) - ((irs1m_BID.getBucket(tenor)+irs1m_ASK.getBucket(tenor))/2d);
      dtMat[1] = irs1m_BID.getDtMaturity(tenor);
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
 
      //3M
      tenor = codTenor[2];
      seur[2] = myMap.get("FIX_"+tenor) + euribor.getBucket(tenor);
      sirs = myMap.get("FIX_"+tenor) - ((irs1m_BID.getBucket(tenor)+irs1m_ASK.getBucket(tenor))/2d);
      sester = myMap.get("FIX_"+tenor) - ((ois_ester_BID.getBucket(tenor)+ois_ester_ASK.getBucket(tenor))/2d);
      spread_3M = sester;
      dtMat[2] = irs1m_BID.getDtMaturity(tenor);
      spread = MathOperator.round(sester,2);
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
    
      //6M
      tenor = codTenor[3];
      seur[3] = myMap.get("FIX_"+tenor) + euribor.getBucket(tenor);
      sirs = myMap.get("FIX_"+tenor) - ((irs1m_BID.getBucket(tenor)+irs1m_ASK.getBucket(tenor))/2d);
      dtMat[3] = irs1m_BID.getDtMaturity(tenor);
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
    
 
      //9M
      tenor = codTenor[4];
      seur[4] = myMap.get("FIX_"+tenor) +  euribor.getInterpolatedRate((irs1m_BID.getDtMaturity(tenor)));
      sirs = myMap.get("FIX_"+tenor) - ((irs1m_BID.getBucket(tenor)+irs1m_ASK.getBucket(tenor))/2d);
      sester = myMap.get("FIX_"+tenor) - ((ois_ester_BID.getBucket(tenor)+ois_ester_ASK.getBucket(tenor))/2d);
      dtMat[4] = irs1m_BID.getDtMaturity(tenor);
      spread = MathOperator.round(sester,2);
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
       
      //1Y
      tenor = codTenor[5];
      seur[5] = myMap.get("FIX_"+tenor) + euribor.getBucket(tenor);
      sirs = myMap.get("FIX_"+tenor) - ((irs1m_BID.getBucket(tenor)+irs1m_ASK.getBucket(tenor))/2d);
      sester = myMap.get("FIX_"+tenor) - ((ois_ester_BID.getBucket(tenor)+ois_ester_ASK.getBucket(tenor))/2d);
      stv =  seur[5] - ((irs3m_BID.getBucket(tenor)+irs3m_ASK.getBucket(tenor))/2d);
      dtMat[5] = irs1m_BID.getDtMaturity(tenor);
      spread = MathOperator.round(sester,2);
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
      list_irs.add(new OUT(mn_liq_irs_1m.getCod_asset(), mn_liq_irs_1m.getCod_type(), mn_liq_irs_1m.getCod_ccy(),sirs, tenor, spread-mn_liq_irs_1m.getBucket(tenor), mn_liq_irs_1m.getSoglia(), mn_liq_irs_1m.getDtMaturity(tenor), mn_liq_irs_1m.getOrderNum(tenor)));     	    
       
      //18M
      tenor = codTenor[6];
      double sotit = tit_mlt.getBucket("2Y");
      seur[6] = ((stv+sotit)/2d) +((irs3m_BID.getBucket(tenor)+irs3m_ASK.getBucket(tenor))/2d);
      dtMat[6] = irs1m_BID.getDtMaturity(tenor);
       
      
      CurveStructure curvaSeur = new CurveStructure(dtMat, seur, new String[]{"1M","2M","3M","6M","9M","1Y","18M"}, "SEUR", dtRif);
        
      tenor = "13M";
      seur = curvaSeur.getInterpolatedRate(mn_liq_ester.getDtMaturity(tenor));
      sester = seur-((ois_ester_ASK.getInterpolatedRate((mn_liq_ester.getDtMaturity(tenor))) - ois_ester_BID.getInterpolatedRate((mn_liq_ester.getDtMaturity(tenor))))/2d);
      spread_13M = sester;
      spread = MathOperator.round(sester,2);
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
           
           
      tenor = "3-13M"
      spread = (spread_3M-spread_13M)/2.d;
      spread = MathOperator.round(spread,2)
      list_ester.add(new OUT(mn_liq_ester.getCod_asset(), mn_liq_ester.getCod_type(), mn_liq_ester.getCod_ccy(),spread, tenor, spread-mn_liq_ester.getBucket(tenor), mn_liq_ester.getSoglia(), mn_liq_ester.getDtMaturity(tenor), mn_liq_ester.getOrderNum(tenor)));     	    
      
    
         
  	  insert(list_ester);
  	  insert(list_irs);
  	  
end  

 


